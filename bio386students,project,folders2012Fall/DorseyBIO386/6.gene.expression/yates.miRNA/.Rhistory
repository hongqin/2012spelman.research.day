dataAA = data[grep("CA", rownames(data)), ]
heatmap_2(dataAA, do.dendro = c(TRUE, TRUE), legend = 1,
legfrac = 10,
hclustfun = function(c) hclust( c, method= mymethod),
col = RGBColVec(64),
#main = "CA experiments"
)
data=read.csv("yates.miRNA.csv",row.names=1); #read in microarray data
heatmap_2(data);
str(data)
str(t(data))
heatmap_2(t(data));
heatmap_2(t(data), legend=1);
#install Heatplus pakcage for heatmap
source("http://bioconductor.org/biocLite.R");
biocLite("Heatplus");
library(Heatplus); #load Heatplus package into R
data=read.csv("yates.miRNA.csv",row.names=1); #read in microarray data
data = t(data); #transpose the data
#all data
heatmap_2(data); #A simple heat map
heatmap_2(data, legend = 1 ) #Add a figure legend
heatmap_2(data, legend = 1, col = RGBColVec(64) ) #customerize the color
# pairwise t.test on a set of microRNA data
#read in data
data=read.csv("yates.miRNA.csv",row.names=1);
#find out sample names
samples = colnames( data );
samples [grep( "RC.77",samples) ]
#pick only cell-line "RC.77"
sub77 = data[, grep( "RC.77",samples) ];
#reorder the columns by "Normal" and "Tumor"
sample77names = colnames( sub77 );
sub77 = sub77[, c(grep("Normal",sample77names), grep("Tumor", sample77names) )]
sub77 = data.frame(sub77);
# t.test on every probe through a for-loop
for( i in 1:length(sub77[,1]) ) {
wt = sub77[i, 1:3];
tumor = sub77[i, 4:6];
tt = t.test( wt, tumor);
sub77$p[i] = tt$p.value;
}
### probes with differetial expressions
out005 = sub77[sub77$p<0.05, ] # 0.05 cutoff
out001 = sub77[sub77$p<0.01, ] # 0.01 cutoff
#output your report
#write.csv(out005, "005.csv");
#write.csv(out001, "001.csv");
###              END
out005
ll
ls();
# pairwise t.test on a set of microRNA data
#read in data
data=read.csv("yates.miRNA.csv",row.names=1);
#find out sample names
samples = colnames( data );
samples [grep( "RC.77",samples) ]
#pick only cell-line "RC.77"
sub77 = data[, grep( "RC.77",samples) ];
#reorder the columns by "Normal" and "Tumor"
sample77names = colnames( sub77 );
sub77 = sub77[, c(grep("Normal",sample77names), grep("Tumor", sample77names) )]
sub77 = data.frame(sub77);
# t.test on every probe through a for-loop
for( i in 1:length(sub77[,1]) ) {
wt = sub77[i, 1:3];
tumor = sub77[i, 4:6];
tt = t.test( wt, tumor);
sub77$p[i] = tt$p.value;
sub77$ratio = mean(tumor) / mean(wt);
}
### probes with differetial expressions
out005 = sub77[sub77$p<0.05, ] # 0.05 cutoff
out001 = sub77[sub77$p<0.01, ] # 0.01 cutoff
#output your report
#write.csv(out005, "005.csv");
#write.csv(out001, "001.csv");
###              END
# t.test on every probe through a for-loop
for( i in 1:length(sub77[,1]) ) {
wt = sub77[i, 1:3];
tumor = sub77[i, 4:6];
tt = t.test( wt, tumor);
sub77$p[i] = tt$p.value;
sub77$ratio[i] = mean(tumor) / mean(wt);
}
warnings()
i=1;
wt = sub77[i, 1:3];
tumor = sub77[i, 4:6];
wt
tumor
# t.test on every probe through a for-loop
for( i in 1:length(sub77[,1]) ) {
wt    = t( sub77[i, 1:3] );
tumor = t( sub77[i, 4:6] );
tt = t.test( wt, tumor);
sub77$p[i] = tt$p.value;
sub77$ratio[i] = mean(tumor) / mean(wt);
}
head(sub77)
### probes with differetial expressions
out005 = sub77[sub77$p<0.05, ] # 0.05 cutoff
out001 = sub77[sub77$p<0.01, ] # 0.01 cutoff
out001
out005
#volcano plot
plot( sub77$p ~ sub77$ratio );
#volcano plot
plot( sub77$p ~ log2(sub77$ratio) );
#volcano plot
plot( -log10(sub77$p) ~ log2(sub77$ratio) );
summary(sub77$p)
summary(sub77$ratio)
summary(data)
# pairwise t.test on a set of microRNA data
#read in data
#these values are log2 transformed
data=read.csv("yates.miRNA.csv",row.names=1);
#find out sample names
samples = colnames( data );
samples [grep( "RC.77",samples) ]
#pick only cell-line "RC.77"
sub77 = data[, grep( "RC.77",samples) ];
#reorder the columns by "Normal" and "Tumor"
sample77names = colnames( sub77 );
sub77 = sub77[, c(grep("Normal",sample77names), grep("Tumor", sample77names) )]
sub77 = data.frame(sub77);
# t.test on every probe through a for-loop
for( i in 1:length(sub77[,1]) ) {
wt    = t( sub77[i, 1:3] );
tumor = t( sub77[i, 4:6] );
tt = t.test( wt, tumor);
sub77$p[i] = tt$p.value;
sub77$ratio[i] = mean(tumor) - mean(wt);
}
### probes with differetial expressions
out005 = sub77[sub77$p<0.05, ] # 0.05 cutoff
out001 = sub77[sub77$p<0.01, ] # 0.01 cutoff
#output your report
write.csv(out005, "005.csv"); #these file can be opened in EXCEL
write.csv(out001, "001.csv");
#volcano plot
plot( -log10(sub77$p) ~ log2(sub77$ratio) );
###              END
summary(sub77$ratio)
# pairwise t.test on a set of microRNA data
#read in data
#these values are log2 transformed
data=read.csv("yates.miRNA.csv",row.names=1);
#find out sample names
samples = colnames( data );
samples [grep( "RC.77",samples) ]
#pick only cell-line "RC.77"
sub77 = data[, grep( "RC.77",samples) ];
#reorder the columns by "Normal" and "Tumor"
sample77names = colnames( sub77 );
sub77 = sub77[, c(grep("Normal",sample77names), grep("Tumor", sample77names) )]
sub77 = data.frame(sub77);
# t.test on every probe through a for-loop
for( i in 1:length(sub77[,1]) ) {
wt    = t( sub77[i, 1:3] );
tumor = t( sub77[i, 4:6] );
tt = t.test( wt, tumor);
sub77$p[i] = tt$p.value;
sub77$ratio[i] = mean(tumor) - mean(wt);
}
### probes with differetial expressions
out005 = sub77[sub77$p<0.05, ] # 0.05 cutoff
out001 = sub77[sub77$p<0.01, ] # 0.01 cutoff
#output your report
write.csv(out005, "005.csv"); #these file can be opened in EXCEL
write.csv(out001, "001.csv");
#volcano plot
plot( -log10(sub77$p) ~ sub77$ratio );
###              END
points( -log10(out005$p) ~ out005$ratio, col="red" );
# pairwise t.test on a set of microRNA data
#read in data
#these values are log2 transformed
data=read.csv("yates.miRNA.csv",row.names=1);
#find out sample names
samples = colnames( data );
samples [grep( "RC.77",samples) ]
#pick only cell-line "RC.77"
sub77 = data[, grep( "RC.77",samples) ];
#reorder the columns by "Normal" and "Tumor"
sample77names = colnames( sub77 );
sub77 = sub77[, c(grep("Normal",sample77names), grep("Tumor", sample77names) )]
sub77 = data.frame(sub77);
# t.test on every probe through a for-loop
for( i in 1:length(sub77[,1]) ) {
wt    = t( sub77[i, 1:3] );
tumor = t( sub77[i, 4:6] );
tt = t.test( wt, tumor);
sub77$p[i] = tt$p.value;
sub77$ratio[i] = mean(tumor) - mean(wt);
}
### probes with differetial expressions
out001 = sub77[sub77$p<0.01, ] # 0.01 cutoff
#output your report
write.csv(out001, "001.csv");
#volcano plot
plot( -log10(sub77$p) ~ sub77$ratio );
points( -log10(out001$p) ~ out001$ratio, col="red" ); #color significant ones
###              END
# pairwise t.test on a set of microRNA data
#read in data
#these values are log2 transformed
data=read.csv("yates.miRNA.csv",row.names=1);
#find out sample names
samples = colnames( data );
samples [grep( "RC.77",samples) ]
#pick only cell-line "RC.77"
sub77 = data[, grep( "RC.77",samples) ];
#reorder the columns by "Normal" and "Tumor"
sample77names = colnames( sub77 );
sub77 = sub77[, c(grep("Normal",sample77names), grep("Tumor", sample77names) )]
sub77 = data.frame(sub77);
# t.test on every probe through a for-loop
for( i in 1:length(sub77[,1]) ) {
wt    = t( sub77[i, 1:3] );
tumor = t( sub77[i, 4:6] );
tt = t.test( wt, tumor);
sub77$p[i] = tt$p.value;
sub77$ratio[i] = mean(tumor) - mean(wt);
}
### probes with differetial expressions
out001 = sub77[sub77$p<0.01, ] # 0.01 cutoff
#volcano plot
plot( -log10(sub77$p) ~ sub77$ratio );
points( -log10(out001$p) ~ out001$ratio, col="red" ); #color significant ones
#output your report
write.csv(out001, "001.csv");
###              END
###### Generate heat maps based a set of
### microRNA expression data from African-American prostate patients
### and Caucasi
#install Heatplus pakcage for heatmap
source("http://bioconductor.org/biocLite.R");
biocLite("Heatplus");
library(Heatplus); #load Heatplus package into R
data=read.csv("yates.miRNA.csv",row.names=1); #read in microarray data
data = t(data); #transpose the data
heatmap_2(data); #A simple heat map
heatmap_2(data, legend = 1 ) #Add a figure legend
heatmap_2(data, legend = 1, col = RGBColVec(64) ) #customerize the color
############
############ END
# pairwise t.test on a set of microRNA data#
#
#read in data#
#these values are log2 transformed#
data=read.csv("yates.miRNA.csv",row.names=1); #
#
#find out sample names#
samples = colnames( data );#
samples [grep( "RC.77",samples) ]#
#
#pick only cell-line "RC.77"#
sub77 = data[, grep( "RC.77",samples) ];#
#
#reorder the columns by "Normal" and "Tumor"#
sample77names = colnames( sub77 );#
sub77 = sub77[, c(grep("Normal",sample77names), grep("Tumor", sample77names) )]#
sub77 = data.frame(sub77);#
#
#
# t.test on every probe through a for-loop#
for( i in 1:length(sub77[,1]) ) {#
wt    = t( sub77[i, 1:3] );#
tumor = t( sub77[i, 4:6] );#
tt = t.test( wt, tumor); #
sub77$p[i] = tt$p.value;#
sub77$ratio[i] = mean(tumor) - mean(wt); #
}#
#
### probes with differetial expressions#
out001 = sub77[sub77$p<0.01, ] # 0.01 cutoff#
#
#volcano plot#
plot( -log10(sub77$p) ~ sub77$ratio ); #
points( -log10(out001$p) ~ out001$ratio, col="red" ); #color significant ones#
#
#output your report#
write.csv(out001, "001.csv"); #
#
################################################# #
###              END
# pairwise t.test on a set of microRNA data
#read in data
#these values are log2 transformed
data=read.csv("yates.miRNA.csv",row.names=1);
#find out sample names
samples = colnames( data );
samples [grep( "RC.77",samples) ]
#pick only cell-line "RC.77"
sub77 = data[, grep( "RC.77",samples) ];
#reorder the columns by "Normal" and "Tumor"
sample77names = colnames( sub77 );
sub77 = sub77[, c(grep("Normal",sample77names), grep("Tumor", sample77names) )]
sub77 = data.frame(sub77);
# t.test on every probe through a for-loop
for( i in 1:length(sub77[,1]) ) {
wt    = t( sub77[i, 1:3] );
tumor = t( sub77[i, 4:6] );
tt = t.test( wt, tumor);
sub77$p[i] = tt$p.value;
sub77$ratio[i] = mean(tumor) - mean(wt);
}
### probes with differetial expressions
out001 = sub77[sub77$p<0.01, ] # 0.01 cutoff
#volcano plot
plot( -log10(sub77$p) ~ sub77$ratio );
points( -log10(out001$p) ~ out001$ratio, col="red" ); #color significant ones
#output your report
write.csv(out001, "001.csv");
#################################################
###              END                          ###
#################################################
###### Generate heat maps based a set of
### microRNA expression data from African-American prostate patients
### and Caucasian ones.
#install Heatplus pakcage for heatmap
source("http://bioconductor.org/biocLite.R");
biocLite("Heatplus");
library(Heatplus); #load Heatplus package into R
data=read.csv("yates.miRNA.csv",row.names=1); #read in microarray data
data = t(data); #transpose the data
heatmap_2(data); #A simple heat map
heatmap_2(data, legend = 1 ) #Add a figure legend
heatmap_2(data, legend = 1, col = RGBColVec(64) ) #customerize the color
############
############ END
############
help(package=Heatplus)
?version
version()
version
